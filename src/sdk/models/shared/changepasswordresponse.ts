/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ChangePasswordResponseState extends SpeakeasyBase {}

/**
 * Change password response object.
 */
export class ChangePasswordResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "oneTimePassword" })
    oneTimePassword?: string;

    @SpeakeasyMetadata({ elemType: ChangePasswordResponseState })
    @Expose({ name: "state" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, ChangePasswordResponseState> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], ChangePasswordResponseState);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    state?: Record<string, ChangePasswordResponseState>;
}
