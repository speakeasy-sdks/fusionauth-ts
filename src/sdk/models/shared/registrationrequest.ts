/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventInfo } from "./eventinfo";
import { User } from "./user";
import { UserRegistration } from "./userregistration";
import { Expose, Type } from "class-transformer";

/**
 * Registration API request object.
 */
export class RegistrationRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "disableDomainBlock" })
    disableDomainBlock?: boolean;

    /**
     * Information about a user event (login, register, etc) that helps identify the source of the event (location, device type, OS, etc).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eventInfo" })
    @Type(() => EventInfo)
    eventInfo?: EventInfo;

    @SpeakeasyMetadata()
    @Expose({ name: "generateAuthenticationToken" })
    generateAuthenticationToken?: boolean;

    /**
     * User registration information for a single application.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "registration" })
    @Type(() => UserRegistration)
    registration?: UserRegistration;

    @SpeakeasyMetadata()
    @Expose({ name: "sendSetPasswordEmail" })
    sendSetPasswordEmail?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "skipRegistrationVerification" })
    skipRegistrationVerification?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "skipVerification" })
    skipVerification?: boolean;

    /**
     * The global view of a User. This object contains all global information about the user including birth date, registration information  preferred languages, global attributes, etc.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => User)
    user?: User;
}
