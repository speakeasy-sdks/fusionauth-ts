/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectorType } from "./connectortype";
import { Expose } from "class-transformer";

/**
 * Do not require a setter for 'type', it is defined by the concrete class and is not mutable
 */
export class BaseConnectorConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  @Expose({ name: "debug" })
  debug?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insertInstant" })
  insertInstant?: number;

  /**
   * The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateInstant" })
  lastUpdateInstant?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The types of connectors. This enum is stored as an ordinal on the <code>identities<code> table, order must be maintained.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ConnectorType;
}
