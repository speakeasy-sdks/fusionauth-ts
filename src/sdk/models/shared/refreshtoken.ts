/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetaData } from "./metadata";
import { Expose, Transform, Type } from "class-transformer";

export class RefreshTokenData extends SpeakeasyBase {}

/**
 * Models a JWT Refresh Token.
 */
export class RefreshToken extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "applicationId" })
    applicationId?: string;

    @SpeakeasyMetadata({ elemType: RefreshTokenData })
    @Expose({ name: "data" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, RefreshTokenData> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], RefreshTokenData);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    data?: Record<string, RefreshTokenData>;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "insertInstant" })
    insertInstant?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "metaData" })
    @Type(() => MetaData)
    metaData?: MetaData;

    /**
     * The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "startInstant" })
    startInstant?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "tenantId" })
    tenantId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "token" })
    token?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userId" })
    userId?: string;
}
