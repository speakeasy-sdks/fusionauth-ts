/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IdentityProviderOauth2Configuration } from "./identityprovideroauth2configuration";
import { Expose, Transform, Type } from "class-transformer";

export class OpenIdConnectApplicationConfigurationData extends SpeakeasyBase {}

export class OpenIdConnectApplicationConfiguration extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "buttonImageURL" })
    buttonImageURL?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "buttonText" })
    buttonText?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createRegistration" })
    createRegistration?: boolean;

    @SpeakeasyMetadata({ elemType: OpenIdConnectApplicationConfigurationData })
    @Expose({ name: "data" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, OpenIdConnectApplicationConfigurationData> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], OpenIdConnectApplicationConfigurationData);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    data?: Record<string, OpenIdConnectApplicationConfigurationData>;

    @SpeakeasyMetadata()
    @Expose({ name: "oauth2" })
    @Type(() => IdentityProviderOauth2Configuration)
    oauth2?: IdentityProviderOauth2Configuration;
}
