/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class RetrieveUserRecentLoginRequest extends SpeakeasyBase {
  /**
   * (Optional, defaults to 10) The number of records to retrieve.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: string;

  /**
   * The initial record. e.g. 0 is the last login, 100 will be the 100th most recent login.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;

  /**
   * The Id of the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userId",
  })
  userId?: string;
}

export class RetrieveUserRecentLoginResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  errors?: shared.Errors;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  recentLoginResponse?: shared.RecentLoginResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
