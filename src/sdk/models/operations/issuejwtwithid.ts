/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class IssueJWTWithIdRequest extends SpeakeasyBase {
    /**
     * The Application Id for which you are requesting a new access token be issued.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=applicationId" })
    applicationId?: string;

    /**
     * An existing refresh token used to request a refresh token in addition to a JWT in the response. <p>The target application represented by the applicationId request parameter must have refresh tokens enabled in order to receive a refresh token in the response.</p>
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=refreshToken" })
    refreshToken?: string;
}

export class IssueJWTWithIdResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Error
     */
    @SpeakeasyMetadata()
    errors?: shared.Errors;

    /**
     * Success
     */
    @SpeakeasyMetadata()
    issueResponse?: shared.IssueResponse;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
